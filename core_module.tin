#CLASS core kill;
#CLASS core open;
#SHOWME Loading <069>core<099>...;

#ALIAS {layouts}
{
    #SHOWME {Valid Layouts:\n};
    #SHOWME {1              2              3              4};
    #SHOWME { ___________    ___________    ___________    ___________};
    #SHOWME {|           |  |           |  |     |     |  |           |};
    #SHOWME {|           |  |     1     |  |     |     |  |     1     |};
    #SHOWME {|     M     |  |___________|  |  M  |  1  |  |___________|};
    #SHOWME {|           |  |           |  |     |     |  |     |     |};
    #SHOWME {|           |  |     M     |  |     |     |  |  M  |  2  |};
    #SHOWME {|_____ _____|  |___________|  |_____|_____|  |_____|_____|\n};
    #SHOWME {5              6              7              8};
    #SHOWME { ___________    ___________    ___________    ___________};
    #SHOWME {|     |     |  |     |     |  |     |     |  |     |     |};
    #SHOWME {|  1  |     |  |  1  |  2  |  |     |  1  |  |  1  |  2  |};
    #SHOWME {|_____|  2  |  |_____|_____|  |  M  |_____|  |_____|_____|};
    #SHOWME {|     |     |  |           |  |     |     |  |     |     |};
    #SHOWME {|  M  |     |  |     M     |  |     |  2  |  |  M  |  3  |};
    #SHOWME {|_____|_____|  |___________|  |_____|_____|  |_____|_____|\n};
}

#FUNCTION {create_layout}
{
    #NOP handle screen layout;
    #IF {&{height_percent}}
    {
        #VAR screen[height_percent] $height_percent;
        #UNVAR height_percent;
    };

    #IF {&{width_percent}}
    {
        #VAR screen[width_percent] $width_percent;
        #UNVAR width_percent;
    };

    #SCREEN get rows screen[height];
    #SCREEN get cols screen[width];
    #MATH screen[height] {$screen[height] - 1};

    #NOP calc middle split locations;
    #MATH screen[split][y] {(100 - $screen[height_percent]) * 0.01 * $screen[height]};
    #FORMAT screen[split][y] {%d} {$screen[split][y]};
    #MATH screen[split][x] {$screen[width_percent] * 0.01 * $screen[width]};
    #FORMAT screen[split][x] {%d} {$screen[split][x]};
    
    #NOP calc layout;
    #SWITCH {$layout}
    {
        #CASE {2}
        {
            #VAR screen[scroll][y1] {$screen[split][y]};
            #VAR screen[scroll][x1] {1};
            #VAR screen[scroll][y2] {$screen[height]};
            #VAR screen[scroll][x2] {$screen[width]};

            #VAR screen[panes][1][y1] {2};
            #VAR screen[panes][1][x1] {2};
            #MATH screen[panes][1][y2] {$screen[split][y] - 2};
            #MATH screen[panes][1][x2] {$screen[width] - 1};
            #VAR screen[boxes][1][y1] {1};
            #VAR screen[boxes][1][x1] {1};
            #MATH screen[boxes][1][y2] {$screen[split][y] - 1};
            #VAR screen[boxes][1][x2] {$screen[width]};
        }
        #CASE {3}
        {
            #VAR screen[scroll][y1] {1};
            #VAR screen[scroll][x1] {1};
            #VAR screen[scroll][y2] {$screen[height]};
            #VAR screen[scroll][x2] {$screen[split][x]};

            #VAR screen[panes][1][y1] {2};
            #MATH screen[panes][1][x1] {$screen[split][x] + 2};
            #MATH screen[panes][1][y2] {$screen[height] - 2};
            #MATH screen[panes][1][x2] {$screen[width] - 1};
            #VAR screen[boxes][1][y1] {1};
            #MATH screen[boxes][1][x1] {$screen[split][x] + 1};
            #MATH screen[boxes][1][y2] {$screen[height] - 1};
            #VAR screen[boxes][1][x2] {$screen[width]};
        }
        #CASE {4}
        {
            #VAR screen[scroll][y1] {$screen[split][y]};
            #VAR screen[scroll][x1] {1};
            #VAR screen[scroll][y2] {$screen[height]};
            #VAR screen[scroll][x2] {$screen[split][x]};

            #VAR screen[panes][1][y1] {2};
            #VAR screen[panes][1][x1] {2};
            #MATH screen[panes][1][y2] {$screen[split][y] - 2};
            #MATH screen[panes][1][x2] {$screen[width] - 1};
            #VAR screen[boxes][1][y1] {1};
            #VAR screen[boxes][1][x1] {1};
            #MATH screen[boxes][1][y2] {$screen[split][y] - 1};
            #VAR screen[boxes][1][x2] {$screen[width]};

            #MATH screen[panes][2][y1] {$screen[split][y] + 1};
            #MATH screen[panes][2][x1] {$screen[split][x] + 2};
            #MATH screen[panes][2][y2] {$screen[height] - 2};
            #MATH screen[panes][2][x2] {$screen[width] - 1};
            #VAR screen[boxes][2][y1] {$screen[split][y]};
            #MATH screen[boxes][2][x1] {$screen[split][x] + 1};
            #MATH screen[boxes][2][y2] {$screen[height] - 1};
            #VAR screen[boxes][2][x2] {$screen[width]};
        }
        #CASE {5}
        {
            #VAR screen[scroll][y1] {$screen[split][y]};
            #VAR screen[scroll][x1] {1};
            #VAR screen[scroll][y2] {$screen[height]};
            #VAR screen[scroll][x2] {$screen[split][x]};

            #VAR screen[panes][1][y1] {2};
            #VAR screen[panes][1][x1] {2};
            #MATH screen[panes][1][y2] {$screen[split][y] - 2};
            #MATH screen[panes][1][x2] {$screen[split][x] - 1};
            #VAR screen[boxes][1][y1] {1};
            #VAR screen[boxes][1][x1] {1};
            #MATH screen[boxes][1][y2] {$screen[split][y] - 1};
            #VAR screen[boxes][1][x2] {$screen[split][x]};

            #VAR screen[panes][2][y1] {2};
            #MATH screen[panes][2][x1] {$screen[split][x] + 2};
            #MATH screen[panes][2][y2] {$screen[height] - 2};
            #MATH screen[panes][2][x2] {$screen[width] - 1};
            #VAR screen[boxes][2][y1] {1};
            #MATH screen[boxes][2][x1] {$screen[split][x] + 1};
            #MATH screen[boxes][2][y2] {$screen[height] - 1};
            #VAR screen[boxes][2][x2] {$screen[width]};
        }
        #CASE {6}
        {
            #VAR screen[scroll][y1] {$screen[split][y]};
            #VAR screen[scroll][x1] {1};
            #VAR screen[scroll][y2] {$screen[height]};
            #VAR screen[scroll][x2] {$screen[width]};

            #VAR screen[panes][1][y1] {2};
            #VAR screen[panes][1][x1] {2};
            #MATH screen[panes][1][y2] {$screen[split][y] - 2};
            #MATH screen[panes][1][x2] {$screen[split][x] - 1};
            #VAR screen[boxes][1][y1] {1};
            #VAR screen[boxes][1][x1] {1};
            #MATH screen[boxes][1][y2] {$screen[split][y] - 1};
            #VAR screen[boxes][1][x2] {$screen[split][x]};

            #VAR screen[panes][2][y1] {2};
            #MATH screen[panes][2][x1] {$screen[split][x] + 2};
            #MATH screen[panes][2][y2] {$screen[split][y] - 2};
            #MATH screen[panes][2][x2] {$screen[width] - 1};
            #VAR screen[boxes][2][y1] {1};
            #MATH screen[boxes][2][x1] {$screen[split][x] + 1};
            #MATH screen[boxes][2][y2] {$screen[split][y] - 1};
            #VAR screen[boxes][2][x2] {$screen[width]};
        }
        #CASE {7}
        {
            #VAR screen[scroll][y1] {1};
            #VAR screen[scroll][x1] {1};
            #VAR screen[scroll][y2] {$screen[height]};
            #VAR screen[scroll][x2] {$screen[split][x]};

            #VAR screen[panes][1][y1] {2};
            #MATH screen[panes][1][x1] {$screen[split][x] + 2};
            #MATH screen[panes][1][y2] {$screen[split][y] - 2};
            #MATH screen[panes][1][x2] {$screen[width] - 1};
            #VAR screen[boxes][1][y1] {1};
            #MATH screen[boxes][1][x1] {$screen[split][x] + 1};
            #MATH screen[boxes][1][y2] {$screen[split][y] - 1};
            #VAR screen[boxes][1][x2] {$screen[width]};

            #MATH screen[panes][2][y1] {$screen[split][y] + 1};
            #MATH screen[panes][2][x1] {$screen[split][x] + 2};
            #MATH screen[panes][2][y2] {$screen[height] - 2};
            #MATH screen[panes][2][x2] {$screen[width] - 1};
            #VAR screen[boxes][2][y1] {$screen[split][y]};
            #MATH screen[boxes][2][x1] {$screen[split][x] + 1};
            #MATH screen[boxes][2][y2] {$screen[height] - 1};
            #VAR screen[boxes][2][x2] {$screen[width]};
        }
        #CASE {8}
        {
            #VAR screen[scroll][y1] {$screen[split][y]};
            #VAR screen[scroll][x1] {1};
            #VAR screen[scroll][y2] {$screen[height]};
            #VAR screen[scroll][x2] {$screen[split][x]};

            #VAR screen[panes][1][y1] {2};
            #VAR screen[panes][1][x1] {2};
            #MATH screen[panes][1][y2] {$screen[split][y] - 2};
            #MATH screen[panes][1][x2] {$screen[split][x] - 1};
            #VAR screen[boxes][1][y1] {1};
            #VAR screen[boxes][1][x1] {1};
            #MATH screen[boxes][1][y2] {$screen[split][y] - 1};
            #VAR screen[boxes][1][x2] {$screen[split][x]};

            #VAR screen[panes][2][y1] {2};
            #MATH screen[panes][2][x1] {$screen[split][x] + 2};
            #MATH screen[panes][2][y2] {$screen[split][y] - 2};
            #MATH screen[panes][2][x2] {$screen[width] - 1};
            #VAR screen[boxes][2][y1] {1};
            #MATH screen[boxes][2][x1] {$screen[split][x] + 1};
            #MATH screen[boxes][2][y2] {$screen[split][y] - 1};
            #VAR screen[boxes][2][x2] {$screen[width]};

            #MATH screen[panes][3][y1] {$screen[split][y] + 1};
            #MATH screen[panes][3][x1] {$screen[split][x] + 2};
            #MATH screen[panes][3][y2] {$screen[height] - 2};
            #MATH screen[panes][3][x2] {$screen[width] - 1};
            #VAR screen[boxes][3][y1] {$screen[split][y]};
            #MATH screen[boxes][3][x1] {$screen[split][x] + 1};
            #MATH screen[boxes][3][y2] {$screen[height] - 1};
            #VAR screen[boxes][3][x2] {$screen[width]};
        }
        #DEFAULT
        {
            #SHOWME default;
            #VAR screen[scroll][y1] {1};
            #VAR screen[scroll][x1] {1};
            #VAR screen[scroll][y2] {$screen[height]};
            #VAR screen[scroll][x2] {$screen[width]};
        }
    }

    #IF {@has_module{prompt}}
    {
        #MATH screen[scroll][y2] {$screen[scroll][y2] - 4};
    };

    #SCREEN scroll $screen[scroll][y1] $screen[scroll][x1] $screen[scroll][y2] $screen[scroll][x2];
    #SCREEN fill split { };
    #BUFFER end;

    #MATH line_start {@max{$screen[panes][2][y1];1}};
    #MATH line_pos {$screen[panes][2][x1] - 1};
    #UNVAR line_pos;
    #UNVAR line_start;

    #FOREACH $screen[boxes][%*] {box}
    {
        #DRAW box $box[y1] $box[x1] $box[y2] $box[x2];
    }
    #UNVAR box;

    #RETURN #NOP;
};

#FUNCTION {load_user_config}
{
    #CLASS config kill;
    #READ user.config;

    #CLASS default_config read defaults.config;

    #CLASS config open;
    #LOCAL write_default 0;
    #FOREACH {*defaults[%*]} {default}
    {
        #IF {&{$default}} {#NOP;}
        {
            #LOCAL write_default 1;
            #LINE sub {var}
            {
                #VAR {$default} {$defaults[$default]};
            }
        }
    }
    #UNVAR default;
    #IF {$write_default}
    {
        #CLASS config write user.config;
    };
    #CLASS config close;

    #LIST modules create $modules;

    #CLASS default_config kill;

    #RETURN #NOP;
};

#FUNCTION {load_all_modules}
{
    #FOREACH {$modules[%*]} {module}
    {
        #CLASS {module_$module} {kill};
        #CLASS {module_$module} {open};
        #SHOWME Loading <069>$module<099>...;
        #READ modules/$module.tin;
        #CLASS {module_$module} {close};
    };
    #UNVAR module;

    #RETURN #NOP;
};

#FUNCTION {kill_all_modules}
{
    #FOREACH {$modules[%*]} {module}
    {
        #CLASS {module_$module} {kill};
    }
    #UNVAR module;

    #RETURN #NOP;
};

#ALIAS {loadclass %1}
{
    #LIST loaded_classes find %1 loaded_classes_search;
    #IF {$loaded_classes_search > 0}
    {
        #SHOWME <019>Class <069>%1<019> is already loaded.<099>;
    }
    {
        #SHOWME Loading class <069>%1<099>.;
        #LIST loaded_classes add %1;
        #CLASS {%1} {read} {classes/%1.tin};
    }
    #UNVAR loaded_classes_search;
};

#ALIAS {reloadclass %1}
{
    #IF {"%1" == "all"}
    {
        #IF {&{loaded_classes} && &loaded_classes[]}
        {
            #FOREACH {$loaded_classes[%*]} {loaded_classes_class}
            {
                #CLASS {$loaded_classes_class} kill;
                #CLASS {$loaded_classes_class} {read} {classes/$loaded_classes_class.tin};
                
                #SHOWME Class <069>$loaded_classes_class<099> has been reloaded.;
            }
            #UNVAR loaded_classes_class;
        }
        {
            #SHOWME <019>No classes are loaded.<099>;
        }
    }
    {
        #LIST loaded_classes find %1 loaded_classes_search;
        #IF {$loaded_classes_search > 0}
        {
            #CLASS {%1} kill;
            #CLASS {%1} {read} {classes/%1.tin};
            #SHOWME Class <069>%1<099> has been reloaded.;
        }
        {
            #SHOWME <019>Class <069>%1<019> is not loaded.<099>;
        }
        #UNVAR loaded_classes_search;
    }
};

#ALIAS {killclass %1}
{
    #IF {"%1" == "all"}
    {
        #IF {&{loaded_classes} && &loaded_classes[]}
        {
            #FOREACH {$loaded_classes[%*]} {loaded_classes_class}
            {
                #CLASS {$loaded_classes_class} kill;
                #SHOWME Class <069>$loaded_classes_class<099> has been killed.
            }
            #UNVAR loaded_classes_class;
            #UNVAR loaded_classes;
        }
        {
            #SHOWME <019>No classes are loaded.<099>;
        }
    }
    {
        #LIST loaded_classes find %1 loaded_classes_search;
        #IF {$loaded_classes_search > 0}
        {
            #CLASS {%1} kill;
            #LIST loaded_classes delete $loaded_classes_search;
            #SHOWME Class <069>%1<099> has been killed.;
        }
        {
            #SHOWME <019>Class <069>%1<019> is not loaded.<099>;
        }
        #UNVAR loaded_classes_search;
    }
};

#ALIAS {phelp}
{
    #IF {&phelp_list[]} {}
    {
        #SHOWME <019>There are no defined aliases.<099>;
    };

    #IF {"%0" == ""}
    {
        #SHOWME Aliases:;
        #FOREACH {*phelp_list[%*]} {phelp_category}
        {
            #SHOWME {     $phelp_category};
            #FOREACH {*phelp_list[$phelp_category][%*]} {phelp_item}
            {
                #SHOWME {        <069>${phelp_item}<099>: $phelp_list[$phelp_category][$phelp_item]};
            }
        }
        #SHOWME \nUse <069>phelp <alias_name><099> to see more information.;
        #UNVAR phelp_category;
        #UNVAR phelp_item;
    }
    {
        #FOREACH {*phelp_list[%*]} {phelp_category}
        {
            #IF {&{phelp_list[$phelp_category][%0]}}
            {
                #SHOWME \nHelp file for <069>%0<099>:;
                #SCAN TXT {help_files/%0.txt};
                #SHOWME \n;
                #VAR found 1;
                #BREAK;
            };
        }
        #UNVAR phelp_category;

        #IF {&{found}}
        {
            #UNVAR found;
        }
        {
            #SHOWME <019>Alias <069>%0<019> not found.<099>;
        };
    }
}

#ACTION {^Press RETURN to continue.$}
{
    #DELAY {0.5} {#SEND;};
}
{5};

#ACTION {{^(?:.*\s)?([\w\-\'\.]+), what would you like to do now?}}
{
    #IF {&{loaded_character} && "$loaded_character" === "%2"} {#NOP}
    {
        #IF {&{loaded_character}}
        {
            killclass $loaded_character;
        };

        #LIST loaded_classes find %2 loaded_classes_search;
        #IF {$loaded_classes_search > 0}
        {
            #SHOWME <019>Class <069>%2<019> is already loaded.<099>;
        }
        {
            #SHOWME Loading class <069>%2<099>.;
            #LIST loaded_classes add %2;
            #CLASS {%2} {read} {classes/%2.tin};
        }
        #UNVAR loaded_classes_search;
        #VAR loaded_character %2;
    };
}
{5};

#TICKER           {idle}  {#SEND}  {300};

#VARIABLE         {MAP_LINES}  {0};
#VARIABLE         {MAP_ROWS}  {0};

#LIST phelp_list create;

#CLASS core close;

@kill_all_modules{};

@load_user_config{};

#CLASS utils kill;
#CLASS utils open;
#READ utils.tin;
#CLASS utils close;

#CLASS core open;
@create_layout{};
#CLASS core close;

#delay 0
{
    #VAR is_startup 1;
    @load_all_modules{};
    #UNVAR is_startup;
}
